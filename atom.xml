<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ershaoyelxw.github.io/gridea.github.io</id>
    <title>吴先生。</title>
    <updated>2020-02-26T09:14:10.969Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ershaoyelxw.github.io/gridea.github.io"/>
    <link rel="self" href="https://ershaoyelxw.github.io/gridea.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://ershaoyelxw.github.io/gridea.github.io/images/avatar.png</logo>
    <icon>https://ershaoyelxw.github.io/gridea.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 吴先生。</rights>
    <entry>
        <title type="html"><![CDATA[部署node到服务器，nginx设置静态资源可以直接访问]]></title>
        <id>https://ershaoyelxw.github.io/gridea.github.io/post/bu-shu-node-dao-fu-wu-qi-nginx-she-zhi-jing-tai-zi-yuan-ke-yi-zhi-jie-fang-wen</id>
        <link href="https://ershaoyelxw.github.io/gridea.github.io/post/bu-shu-node-dao-fu-wu-qi-nginx-she-zhi-jing-tai-zi-yuan-ke-yi-zhi-jie-fang-wen">
        </link>
        <updated>2020-02-26T09:04:46.000Z</updated>
        <content type="html"><![CDATA[<pre><code>location /接口地址/ {
	proxy_pass http://127.0.0.1:7001/;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ApiCloud 模块]]></title>
        <id>https://ershaoyelxw.github.io/gridea.github.io/post/apicloud-mo-kuai</id>
        <link href="https://ershaoyelxw.github.io/gridea.github.io/post/apicloud-mo-kuai">
        </link>
        <updated>2019-10-30T08:27:20.000Z</updated>
        <content type="html"><![CDATA[<p>{
'md-name': &quot;videoPlayer&quot;,
'md-name': &quot;webBrowser&quot;,
'md-name': &quot;photoBrowser&quot;,
'md-name': &quot;H5InputRelevant&quot;,
'md-name': &quot;dialogBox&quot;,
'md-name': &quot;UICustomPicker&quot;,
'md-name': &quot;UIMediaScanner&quot;,
'md-name': &quot;guide&quot;,
'md-name': &quot;UIPullRefreshFlash&quot;,
'md-name': &quot;FNSettings&quot;,
'md-name': &quot;UILoading&quot;,
'md-name': &quot;privacy&quot;,
'md-name': &quot;UICityList&quot;,
'md-name': &quot;fs&quot;,
'md-name': &quot;trans&quot;,
'md-name': &quot;clipBoard&quot;,
'md-name': &quot;UIInput&quot;,
'md-name': &quot;FNScanner&quot;,
'md-name': &quot;UIScrollPicture&quot;,
'md-name': &quot;db&quot;,
'md-name': &quot;mam&quot;,
}</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[React-Native 解决在IOS端使用圆角borderRadius失效问题]]></title>
        <id>https://ershaoyelxw.github.io/gridea.github.io/post/react-native-jie-jue-zai-ios-duan-shi-yong-yuan-jiao-borderradius-shi-xiao-wen-ti</id>
        <link href="https://ershaoyelxw.github.io/gridea.github.io/post/react-native-jie-jue-zai-ios-duan-shi-yong-yuan-jiao-borderradius-shi-xiao-wen-ti">
        </link>
        <updated>2019-07-04T08:58:40.000Z</updated>
        <content type="html"><![CDATA[<p>在IOS上使用圆角属性失败解决方法：</p>
<pre><code>overflow: 'hidden'
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nuxt.js 部署nginx服务器，静态资源加载不出来解决方法]]></title>
        <id>https://ershaoyelxw.github.io/gridea.github.io/post/nuxtjs-bu-shu-nginx-fu-wu-qi-jing-tai-zi-yuan-jia-zai-bu-chu-lai-jie-jue-fang-fa</id>
        <link href="https://ershaoyelxw.github.io/gridea.github.io/post/nuxtjs-bu-shu-nginx-fu-wu-qi-jing-tai-zi-yuan-jia-zai-bu-chu-lai-jie-jue-fang-fa">
        </link>
        <updated>2019-07-01T16:48:28.000Z</updated>
        <content type="html"><![CDATA[<p>找到项目配置文件，注释以下内容，刷新页面就可以了。</p>
<pre><code>    #location ~ .*\.(js|css)?$
    #{
    #    expires      12h;
    #    access_log off; 
    #}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript  replace全部替换方法]]></title>
        <id>https://ershaoyelxw.github.io/gridea.github.io/post/javascript-replace</id>
        <link href="https://ershaoyelxw.github.io/gridea.github.io/post/javascript-replace">
        </link>
        <updated>2019-06-17T10:33:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="替换第一次出现的字符串">替换第一次出现的字符串</h3>
<pre><code>var str='我是一名开发程序的程序员';
str = str.replace( '程序' , '编程' );
console.log(str);
</code></pre>
<h3 id="替换全部匹配的字符串">替换全部匹配的字符串</h3>
<pre><code>var str='我是一名开发程序的程序员';
var reg = new RegExp( '程序' , &quot;g&quot; );
str = str.replace( reg , '编程' );
console.log(str);
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[微信小程序 scroll-view 左右无法滑动问题]]></title>
        <id>https://ershaoyelxw.github.io/gridea.github.io/post/wei-xin-xiao-cheng-xu-scroll-view-zuo-you-wu-fa-hua-dong-wen-ti</id>
        <link href="https://ershaoyelxw.github.io/gridea.github.io/post/wei-xin-xiao-cheng-xu-scroll-view-zuo-you-wu-fa-hua-dong-wen-ti">
        </link>
        <updated>2019-05-31T13:28:06.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>scroll-view 滑动元素取消使用 <code>float: left;</code> 浮动</li>
<li>scroll-view 滑动元素添加 <code>dislay:inline-block;</code> 样式</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[docker 使用]]></title>
        <id>https://ershaoyelxw.github.io/gridea.github.io/post/docker-ji-ben-ming-ling</id>
        <link href="https://ershaoyelxw.github.io/gridea.github.io/post/docker-ji-ben-ming-ling">
        </link>
        <updated>2019-05-30T10:12:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="拉取镜像">拉取镜像</h3>
<pre><code>docker pull centos
</code></pre>
<h3 id="查看镜像">查看镜像</h3>
<pre><code>docker images
</code></pre>
<h3 id="运行镜像">运行镜像</h3>
<p>bt 镜像名</p>
<pre><code>docker run -i -t -d --name bt -p 80:80 -p 8888:8888 -p 3306:3306 -v /User/mac/workspace/dockerworkspace:/www/wwwroot bt

-i: 以交互模式运行容器；
-t: 为容器重新分配一个伪输入终端；
-d: 后台运行容器，并返回容器ID；
--name=&quot;bt&quot;: 为容器指定一个名称；
-p: 端口映射，格式为：主机(宿主)端口:容器端口, 可以多次使用
-v:挂载目录   本机目录:容器目录(/Users/mac/workspace/dockerworkspace:/www/wwwroot)

docker run

</code></pre>
<h3 id="进入容器">进入容器</h3>
<pre><code># bt: 容器名称
# /bin/bash: 使用bash命令行

docker exec -it baota /bin/bash
</code></pre>
<h3 id="保存对容器的修改">保存对容器的修改</h3>
<pre><code>docker commit &lt;container_id&gt; &lt;image_name&gt;
</code></pre>
<h3 id="查看所有容器">查看所有容器</h3>
<pre><code>docker ps -a //查看所有容器
docker ps -a -q //查看所有容器ID
docker ps //查看正在运行容器
</code></pre>
<h3 id="停止运行容器">停止运行容器</h3>
<pre><code>docker stop 容器ID
docker stop $(docker ps -a -q) //停止所有容器
docker rm $(docker ps -a -a) //删除所有容器
</code></pre>
<h3 id="mac-80端口被占用">mac 80端口被占用</h3>
<h4 id="docker-error-error-starting-userland-proxy-bind-for-000080-unexpected-error">Docker Error: Error starting userland proxy: Bind for 0.0.0.0:80: unexpected error</h4>
<pre><code>sudo apachectl stop
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[docker 安装宝塔面板]]></title>
        <id>https://ershaoyelxw.github.io/gridea.github.io/post/docker-an-zhuang-bao-ta-mian-ban</id>
        <link href="https://ershaoyelxw.github.io/gridea.github.io/post/docker-an-zhuang-bao-ta-mian-ban">
        </link>
        <updated>2019-05-30T10:08:41.000Z</updated>
        <content type="html"><![CDATA[<p>docker 安装宝塔面板</p>
<h3 id="docker-安装宝塔面板">docker 安装宝塔面板</h3>
<ul>
<li>把hub.docker.com上centos系统镜像拉取下来</li>
</ul>
<pre><code>docker pull centos
</code></pre>
<ul>
<li>创建自己的容器</li>
</ul>
<pre><code>docker run -i -t -d --name bt -p 80:80 -p 8888:8888 -p 3306:3306 --privileged=true -v /User/mac/workspace/dockerworkspace:/www/wwwroot centos
</code></pre>
<ul>
<li>进入容器</li>
</ul>
<p>bt: 容器名称
/bin/bash: 直接使用bash命令行</p>
<pre><code>docker exec -it bt /bin/bash
</code></pre>
<ul>
<li>bt.cn 查看安装命令</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[chrome 开发谷歌浏览器插件 引用字体包]]></title>
        <id>https://ershaoyelxw.github.io/gridea.github.io/post/chrome-kai-fa-gu-ge-liu-lan-qi-cha-jian-yin-yong-zi-ti-bao</id>
        <link href="https://ershaoyelxw.github.io/gridea.github.io/post/chrome-kai-fa-gu-ge-liu-lan-qi-cha-jian-yin-yong-zi-ti-bao">
        </link>
        <updated>2019-05-30T01:07:38.000Z</updated>
        <content type="html"><![CDATA[<pre><code>var icons = document.createElement('style');
  icons.type = 'text/css';
  icons.textContent = '@font-face { font-family: ct-icons; src: url(&quot;' + chrome.extension.getURL('js/ct-ui/fonts/' + 'ct-icons.woff') + '&quot;),url(&quot;' +chrome.extension.getURL('js/ct-ui/fonts/' + 'ct-icons.ttf') + '&quot;);
  font-weight: 400;font-style: normal }';
  document.head.appendChild(icons);
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Javascript 解决XLSX读取excel文件，单元格读取时间格式后变成浮点型]]></title>
        <id>https://ershaoyelxw.github.io/gridea.github.io/post/javascript-jie-jue-xlsx-du-qu-excel-wen-jian-dan-yuan-ge-du-qu-shi-jian-ge-shi-hou-bian-cheng-fu-dian-xing</id>
        <link href="https://ershaoyelxw.github.io/gridea.github.io/post/javascript-jie-jue-xlsx-du-qu-excel-wen-jian-dan-yuan-ge-du-qu-shi-jian-ge-shi-hou-bian-cheng-fu-dian-xing">
        </link>
        <updated>2019-05-29T12:32:06.000Z</updated>
        <content type="html"><![CDATA[<p>XLSX读取excel文件，单元格读取时间格式后变成浮点型</p>
<p>解决方法：</p>
<pre><code>var value = 42948;
var date = new Date(1900, 0, value - 1);
</code></pre>
]]></content>
    </entry>
</feed>